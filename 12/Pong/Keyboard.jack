// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	static int KBD;

    /** Initializes the keyboard. */
    function void init() {
    	let KBD = 24576;
    	return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
    	return Memory.peek(KBD);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
    	var char c;
    	do Output.printChar(95);
    	while(Keyboard.keyPressed()=0){
    	}
    	let c = Keyboard.keyPressed();
    	do Output.backSpace();
    	while(~(Keyboard.keyPressed()=0)){
    	}
    	do Output.printChar(c);
    	return c;

    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
    	var char c;
    	var String s;
    	let s = String.new(32);
    	do Output.printString(message);
    	while(~(c=128)){
    		let c = Keyboard.readChar();
    		if(c=128){
    			return s;
    		}
    		if(c = 129){
    			if(~(s.length()=0)){
    				do s.eraseLastChar();
    			}
    		}else{
    			let s = s.appendChar(c);
    		}
    	}
    	
    	return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
    	var int i;
    	var String s;
    	let s = Keyboard.readLine(message);
    	let i = s.intValue();
    	return i;
    }
}
